{"version":3,"file":"stories-Modal-stories.2ecb58ddc2980e937857.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA","sources":["webpack://@team-pick/together/./src/components/Modal/useModal.tsx"],"sourcesContent":["import React from \"react\";\nimport { useState, ReactNode, useCallback, isValidElement } from \"react\";\nimport { Portal } from \"../Portal\";\n\ninterface Props {\n  closedCallback?: VoidFunction;\n  openedCallback?: VoidFunction;\n}\n\nexport const useModal = ({ closedCallback, openedCallback }: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const open = useCallback(() => {\n    setIsOpen(true);\n    openedCallback?.();\n  }, []);\n\n  const close = useCallback(() => {\n    setIsOpen(false);\n    closedCallback?.();\n  }, []);\n\n  const renderModal = useCallback(\n    (modal: ReactNode) => {\n      if (isOpen && isValidElement(modal)) {\n        return <Portal selector=\"#modal\">{modal}</Portal>;\n      }\n    },\n    [isOpen],\n  );\n\n  return { open, close, renderModal };\n};\n"],"names":[],"sourceRoot":""}